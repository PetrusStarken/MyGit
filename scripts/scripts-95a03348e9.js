!function(e){"use strict";e.module("myGithubApp",["ngAnimate","ngRoute","ui.materialize"])}(angular),function(e){"use strict";function r(e,r){e.openRepo=function(e){var o="repo/"+e.full_name;r.path(o)}}e.module("myGithubApp").run(r),r.$inject=["$rootScope","$location"]}(angular),function(e){"use strict";function r(e){e.when("/search/:term?",{templateUrl:"views/search.html",controller:"searchController",controllerAs:"search"}).when("/repo/:owner",{templateUrl:"views/repositories.html",controller:"reposController",controllerAs:"repos"}).when("/repo/:owner/:repo",{templateUrl:"views/repository.html",controller:"repoController",controllerAs:"repo"}).when("/not-found",{templateUrl:"404.html"}).otherwise({redirectTo:"/not-found"})}e.module("myGithubApp").config(r),r.$inject=["$routeProvider"]}(angular),function(e){"use strict";var r={githubApiUrl:"https://api.github.com/"};e.module("myGithubApp").constant("config",r)}(angular),function(e){"use strict";function r(e,r){return{request:function(o){return r.carregando=!0,o||e.when(o)},response:function(o){return r.carregando=!1,o||e.when(o)},responseError:function(o){return r.carregando=!1,e.reject(o)}}}function o(e){e.interceptors.push("editHttpInterceptors")}e.module("myGithubApp").factory("editHttpInterceptors",r),e.module("myGithubApp").config(o),r.$inject=["$q","$rootScope"],o.$inject=["$httpProvider"]}(angular),function(e){"use strict";function r(e,r){function o(o,t){return e.get(r.githubApiUrl+"repos/"+o+"/"+t)}function t(o){return e.get(r.githubApiUrl+"users/"+o+"/repos?sort=updated_at")}function n(o){return e.get(r.githubApiUrl+"search/repositories?q="+o+"&sort=stars&order=desc")}function u(o,t){return e.get(r.githubApiUrl+"repos/"+o+"/"+t+"/languages")}function i(o,t){return e.get(r.githubApiUrl+"repos/"+o+"/"+t+"/contributors")}var c={getRepo:o,getReposByOwner:t,getReposByName:n,getRepoLanguages:u,getRepoContributors:i};return c}e.module("myGithubApp").factory("repoService",r),r.$inject=["$http","config"]}(angular),function(e){"use strict";function r(e,r){function o(o){return e.get(r.githubApiUrl+"users/"+o)}var t={getUser:o};return t}e.module("myGithubApp").factory("userService",r),r.$inject=["$http","config"]}(angular),function(e){"use strict";function r(e,r,o){function t(e){return"PetrusStarken"===e?"Meus repositórios":e+" repositórios"}function n(e){function o(e){i.owner=e}function t(e){console.log("Erro: "+e)}r.getUser(e).success(o).error(t)}function u(r){function o(e){i.list=e}function t(e){console.log("Erro: "+e)}e.getReposByOwner(r).success(o).error(t)}var i=this;i.title=t(o.owner),n(o.owner),u(o.owner)}e.module("myGithubApp").controller("reposController",r),r.$inject=["repoService","userService","$routeParams"]}(angular),function(e){"use strict";function r(e,r,o){function t(e){function o(e){c.owner=e}function t(e){console.log("Erro: "+e)}r.getUser(e).success(o).error(t)}function n(r,o){function t(e){c.details=e}function n(e){console.log("Erro: "+e)}e.getRepo(r,o).success(t).error(n)}function u(r,o){function t(e){c.languages=e}function n(e){console.log("Erro: "+e)}e.getRepoLanguages(r,o).success(t).error(n)}function i(r,o){function t(e){c.contributors=e}function n(e){console.log("Erro: "+e)}e.getRepoContributors(r,o).success(t).error(n)}var c=this;t(o.owner),n(o.owner,o.repo),u(o.owner,o.repo),i(o.owner,o.repo)}e.module("myGithubApp").controller("repoController",r),r.$inject=["repoService","userService","$routeParams"]}(angular),function(e){"use strict";function r(e){function r(r){function t(e){o.notFound=!e.incomplete_results,o.searchResult=e.items}function n(e){console.log("Erro: "+e)}return""===r?void(o.notFound=!1):void(r.length<3||e.getReposByName(r).success(t).error(n))}var o=this;o.findRepos=r}r.$inject=["repoService"],e.module("myGithubApp").controller("searchController",r),r.inject=["repoService"]}(angular);